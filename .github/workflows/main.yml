
name: CI/CD Pipeline with Staging and Production

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Specify the environment to deploy to (staging or production)'
        required: true
        default: staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Package Maven
        run: mvn clean package

      - name: check directory
        run: ls -al target

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-jar
          path: target/*.jar
          
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        
      - name: check directory
        run: ls -R
        
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: >
            ibrakadijbra13/service-a:latest,
            ibrakadijbra13/service-a:${{ github.sha }}

      
           
  deploy_infrastructure:
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production'
    needs: build
    steps:
      - name: Deploy ARM template
        run: |
          az group create --name ${{ secrets.RESOURCE_GROUP }} --location "East US"
          az deployment group create \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --template-file path/to/your/arm-template.json \
            --parameters @path/to/parameters.json

  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: [build, deploy_infrastructure]
    steps:
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f path/to/k8s-deployment-${{ github.event.inputs.environment }}.yml
